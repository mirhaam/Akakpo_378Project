[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "model",
    "section": "",
    "text": "library(reticulate)\n#use_virtualenv(\"C:/Users/C25Mirha.A-Montcho/OneDrive - afacademy.af.edu/Documents/Math378Project/.venv\", required = T)\n\n\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nimport duckdb\nfrom pins import board_folder\nfrom vetiver import vetiver_pin_write\n\n\n##Lab 1\n#df = penguins.load_penguins().dropna()\n\ncon = duckdb.connect('my-db.duckdb')\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\n\ndf.head(3)\n\n  species     island  bill_length_mm  ...  body_mass_g     sex  year\n0  Adelie  Torgersen            39.1  ...       3750.0    male  2007\n1  Adelie  Torgersen            39.5  ...       3800.0  female  2007\n2  Adelie  Torgersen            40.3  ...       3250.0  female  2007\n\n[3 rows x 8 columns]\n\n\n\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)\n\n\nprint(f\"R^2 {model.score(X,y)}\")\n\nR^2 0.8555368759537614\n\nprint(f\"Intercept {model.intercept_}\")\n\nIntercept 2169.269720939392\n\nprint(f\"Columns {X.columns}\")\n\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\n\nprint(f\"Coefficients {model.coef_}\")\n\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\n\n\n\n\nfrom vetiver import VetiverModel\nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)\n\n#b = pins.board_folder('/data/model', allow_pickle_read=True)\n#v = VetiverModel.from_pin(b, 'penguin_model', \n                          #version = '20230422T102952Z-cb1f9')\n\n\n\nmodel_board = board_folder(\n  \"/data/model\", \n  allow_pickle_read = True\n)\n#vetiver_pin_write(model_board, v)\n\n\n#API\nfrom vetiver import VetiverAPI\napp = VetiverAPI(v, check_prototype = True)\n\n\ncon.close()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "eda",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(dbplyr)\n\n\nAttaching package: 'dbplyr'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    ident, sql\n\n#df &lt;- palmerpenguins::penguins\n#Chap3\ncon &lt;- DBI::dbConnect(\n  duckdb::duckdb(), \n  dbdir = \"my-db.duckdb\"\n  )\n#DBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins)\ndf &lt;- dplyr::tbl(con, \"penguins\")\n\n\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      #where(is.numeric), \n      ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by \"species\". You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\n\n\n\n\n#Penguin Size vs Mass by Species\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nDBI::dbDisconnect(con,shutdown=TRUE)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Math378Project",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2\n\n\n\n#Step1\n#renv::activate()\n\n\n#library(ggplot2)\n#library(dplyr)\n#library(vetiver)\n\n\n#Step2/3/4??\n#renv::snapshot()\n#renv::restore()\n\n\n#Step3\n#setwd(\"&lt;Math378Project&gt;\")\n\n\n#Chap2 1\n\n#model_board = board_folder(\n # \"/data/model\", \n  #allow_pickle_read = True\n#)\n#vetiver_pin_write(model_board, v)\n\n\n#Step2\n\n#app = VetiverAPI(v, check_prototype = True)"
  }
]